
#Helper pour lancer les éditeurs sur de précédentes sessions.
_run_SciTE() {
scite -loadsession:$1
}

_run_vim() {
vim -S $1
}

_do_suspend_ram() {
    #sudo pour avoir le prompt du password avant le lock
    sudo sh -c "echo \"Mise en veille et verrouillage de l'écran.\"";
    i3-msg workspace 10 > /dev/null && i3lock -c 111111;
    sudo sh -c "echo -n \"mem\" >/sys/power/state";
}

_display_power_status() {

    for dev in `ls /sys/class/power_supply`; do
        BAT_FULL=`cat /sys/class/power_supply/$dev/uevent | grep "CHARGE_FULL=" | sed 's/POWER_SUPPLY_CHARGE_FULL=//'`
        BAT_NOW=`cat /sys/class/power_supply/$dev/uevent | grep "CHARGE_NOW=" | sed 's/POWER_SUPPLY_CHARGE_NOW=//'`
        #Check if device is actually a battery (not AC)
        if [ "$BAT_FULL" = "" ]; then
            continue;
        fi
        #echo $BAT_FULL
        #echo $BAT_NOW
        echo $dev
        BAT_PERCENT=`bc -l <<-EOF
scale=4
($BAT_NOW/$BAT_FULL)*100.0
EOF`
        echo $BAT_PERCENT"%"
    done

}

_configure_displays() {
    if [ "$#" -eq "0" ]; then
        echo "Liste des ecrans disponibles :"
        xrandr | grep "connected" | sed 's/\([A-Z]\+[-]\?[0-9]*\) \(\(dis\)\?connected\).*/\1 (\2)/'
    elif [ "$#" -ne "2" ]; then
        echo "Usage : ./script\n\tListe les écrans"
        echo "Usage : ./script ecran_interne ecran_externe\n\tConfigure l'affichage des écrans"
    else
        EXTERNAL_OUTPUT="$2"
        INTERNAL_OUTPUT="$1" 

        xrandr | grep $EXTERNAL_OUTPUT | grep " connected "
        EXTERN_PRESENT=$?
        xrandr | grep $INTERNAL_OUTPUT | grep " connected "
        INTERN_PRESENT=$?
        if [ $EXTERN_PRESENT -eq 0 -a $INTERN_PRESENT -eq 0 ]; then
            xrandr --output $INTERNAL_OUTPUT --auto --output $EXTERNAL_OUTPUT --auto --left-of $INTERNAL_OUTPUT
            echo "Configuration terminée"
        else
            echo "L'un des deux ecrans n'est pas présent."
        fi
    fi
}
